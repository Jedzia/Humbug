format 76
"HumbugLib"
  revision 48
  modified_by 2 "root"
  cpp_root_dir "../../src/"


  
  // class settings
  default_attribute_visibility private default_relation_visibility private default_operation_visibility public
  //class diagram settings
  draw_all_relations yes hide_attributes no hide_operations no hide_getset_operations no show_members_full_definition no show_members_visibility yes show_members_stereotype no show_members_context no show_members_multiplicity no show_members_initialization no show_attribute_modifiers no member_max_width 127 show_parameter_dir yes show_parameter_name yes package_name_in_tab no class_drawing_mode natural drawing_language uml show_context_mode no auto_label_position yes show_relation_modifiers no show_relation_visibility no show_infonote no shadow yes show_stereotype_properties no
  //use case diagram settings
  package_name_in_tab no show_context no auto_label_position yes draw_all_relations yes class_drawing_mode actor shadow yes show_stereotype_properties no
  //sequence diagram settings
  show_full_operations_definition no write_horizontally yes class_drawing_mode natural drawing_language uml draw_all_relations yes shadow yes show_stereotype_properties no show_class_context_mode no show_msg_context_mode no
  //collaboration diagram settings
  show_full_operations_definition no show_hierarchical_rank no write_horizontally yes class_drawing_mode natural drawing_language uml package_name_in_tab no show_context no show_msg_context no draw_all_relations yes shadow yes show_stereotype_properties no
  //object diagram settings
   write_horizontally yes package_name_in_tab no show_context no auto_label_position yes draw_all_relations yes shadow yes show_stereotype_properties no
  //component diagram settings
  package_name_in_tab no show_context no auto_label_position yes draw_all_relations yes shadow yes
  draw_component_as_icon no show_component_req_prov no show_component_rea no show_stereotype_properties no
  //deployment diagram settings
  package_name_in_tab no show_context no write_horizontally yes auto_label_position yes draw_all_relations yes shadow yes
  draw_component_as_icon no show_component_req_prov no show_component_rea no show_stereotype_properties no
  //state diagram settings
  package_name_in_tab no show_context no auto_label_position yes write_trans_label_horizontally yes show_trans_definition no draw_all_relations yes shadow yes
  show_activities yes region_horizontally yes drawing_language uml show_stereotype_properties no
  //activity diagram settings
  package_name_in_tab no show_context no show_opaque_action_definition no auto_label_position yes write_flow_label_horizontally no draw_all_relations yes shadow yes
  show_infonote yes drawing_language uml show_stereotype_properties no
  
  class_color yellow duration_color transparent continuation_color gray note_color blue fragment_color transparent subject_color transparent usecase_color yellow package_color transparent component_color green artifact_color green deploymentnode_color gray state_color yellow stateaction_color transparent activity_color transparent activityregion_color transparent activitypartition_color transparent activityaction_color transparent parameterpin_color white 
  font_size 10
  diagram_format A4

  image_root_dir ""

  mark_for_import
  
  cpp_h_dir "HumbugLib"
  cpp_src_dir "HumbugLib"
  cpp_namespace "HumbugLIB_NAMESPACE"
  ncouples 13
  key "gxmi path" value "C:/Documents and Settings/root/My Documents/zipper.xmi"
  key "gxmi no model" value "no"
  key "gxmi gen views" value "no"
  key "gxmi encoding" value "UTF-8"
  key "gxmi umlversion" value "21"
  key "gxmi pk prefix" value "no"
  key "gxmi vis prefix" value "no"
  key "gxmi primitive type" value "no"
  key "gxmi gen extensions" value "no"
  key "gxmi gen eclipse" value "no"
  key "gxmi comment exporter" value "yes"
  key "gxmi linefeed" value "no"
  key "gxmi taggedvalue" value "0"
  package_ref 128130 // test

  classview 141186 "HumbugLib"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    associated_deployment_view deploymentview_ref 206466 // HumbugLib
    class 141314 "global"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 147970 "stdafx"
      visibility package 
      cpp_external cpp_decl "${name}
#include \"HumbugLib/${name}.h\"
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 332034 "cpp0xfix"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end
  end

  deploymentview 206466 "HumbugLib"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 141314 "global"
      stereotype "source"
      cpp_h "#ifndef HumbugLIB_GLOBAL_H
#define HumbugLIB_GLOBAL_H

#ifdef __cplusplus
extern \"C\"
{
#endif

#define STRING2(x) #x
#define STRING(x) STRING2(x)

#define HumbugLIB_NAMESPACE cry
#define HumbugLIB_BEGIN_NAMESPACE namespace Support { namespace HumbugLIB_NAMESPACE {
#define HumbugLIB_END_NAMESPACE } }
#define HumbugLIB_USE_NAMESPACE using namespace Support::HumbugLIB_NAMESPACE;

#undef PRJ_NAMESPACE
#define PRJ_NAMESPACE Support::HumbugLIB_NAMESPACE

// Set the function export visibility and reset all global
// PLATFORM vars cause they interfere with multiple libraries and the
// use of library.cmake. This behavior can be overridden by defining
// EXPLICITELY_USE_PLATFORM_VARS.
#ifndef EXPLICITELY_USE_PLATFORM_VARS
#undef PLATFORM_ALL_DYN_LINK
#ifdef HumbugLib_ALL_DYN_LINK
#	ifndef PLATFORM_ALL_DYN_LINK
#		define PLATFORM_ALL_DYN_LINK 1
#	endif
#endif

#undef PLATFORM_SOURCE
#ifdef HumbugLib_SOURCE
#	define PLATFORM_SOURCE 1
#endif

#undef PLATFORM_ALL_STATIC_LINK
#ifdef HumbugLib_ALL_STATIC_LINK
#	ifndef PLATFORM_ALL_STATIC_LINK
#		define PLATFORM_ALL_STATIC_LINK 1
#	endif
#endif
#endif // EXPLICITELY_USE_PLATFORM_VARS

#undef PLATFORM_DECL
#include \"build/cmake/include/platform.h\"

/*#ifdef HAVE_CONFIG_H
#	include <config.h>
#endif*/

#ifndef qWarning
#  define qWarning printf
#endif

#ifdef __cplusplus
}
#endif

#include \"cpp0xfix.h\"

#endif //HumbugLIB_GLOBAL_H"
      associated_classes
	class_ref 141314 // global
      end
    end

    artifact 147970 "stdafx"
      stereotype "source"
      cpp_h "#ifndef STDAFX_0662284F7DB45ec699439C6DE3179A19_H
#define STDAFX_0662284F7DB45ec699439C6DE3179A19_H

//#define MyDECLSPEC __declspec(dllexport)
//class __declspec(dllexport) TestClass;

#include <HumbugLib/global.h>

#ifdef HAVE_CONFIG_H
#	include <config.h>
#endif

//#include \"HumbugLib/support/strfwd.h\"

#include <algorithm>
#include <cerrno>
#include <cassert>
#include <clocale>
#include <csignal>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <iterator>
#include <list>
#include <map>
#include <memory>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <string.h>

#if defined(USE_LIB_QT4)
    #include <QApplication>
    #include <QtCore>
    #include <QtGui>
    #include <QMainWindow>
    #include <QDomDocument>
    #include <Qsci/qscilexercpp.h>
#endif //defined(USE_LIB_QT4)


#if defined(USE_LIB_BOOST)
// You MUST use FS Version 3 ! <- is obsolete.
// Since boost 1.46.0 V3 ist the default.
//#define BOOST_FILESYSTEM_VERSION 3
    #include \"boost/filesystem.hpp\"

    #include \"boost/regex.hpp\"
    #include \"boost/progress.hpp\"
    #include \"boost/scoped_ptr.hpp\"

    #include \"boost/bind.hpp\"
#endif //defined(USE_LIB_BOOST)

//#include <CppStructz/TestClass.h>
/*#include \"minizip/zip.h\"
#include \"minizip/unzip.h\"
#ifndef HumbugLIB_NAMESPACE_HELPERS_H
#  include \"shared/Helpers.h\"
#endif*/

#endif //STDAFX_0662284F7DB45ec699439C6DE3179A19_H
"
      cpp_src "/*---------------------------------------------------------*/
/*!
 * This file is part of Humbug, the commodore 64 swiss knife.
 * License details can be found in the file COPYING.
 * Copyright (c) 2011, EvePanix. All rights reserved.
 *
 * \\brief      This file contains the implementation of
 *             the ${name} class.
 * \\folder     $(folder)
 * \\file       ${name}.cpp
 * \\date       2011-09-17
 * \\author     Jedzia.
 *
 * modified    2011-09-17, Jedzia
 */
/*---------------------------------------------------------*/
#include \"stdafx.h\"
"
      associated_classes
	class_ref 147970 // stdafx
      end
    end

    artifact 259842 "cpp0xfix"
      stereotype "source"
      cpp_h "#ifndef HumbugLIB_NAMESPACE_CPP0XFIX_H
#define HumbugLIB_NAMESPACE_CPP0XFIX_H



// dirty workaround for vector<T>::data() function.
// hmmm, this is dependant on MSVC2008
#include <cstring>
#if _HAS_CPP0X

#undef USE_CSTDINT
#define USE_CSTDINT

namespace HumbugLIB_NAMESPACE {
	template<class T>
	inline typename T::value_type *getDataPointer(T &input )
	{
		return input.data();
	};

	template<class T>
	inline const typename T::value_type *getDataPointer(const T &input )
	{
		return input.data();
	};
}
#else
#include <sys/types.h>

#ifdef _MSC_VER
/* Define to `unsigned short' if <sys/types.h> doesn't define. */
#define uint16_t unsigned short

/* Define to `unsigned int' if <sys/types.h> doesn't define. */
/* #undef HAVE_UINT32_T */
#define uint32_t unsigned int

/* Define to `int' if <sys/types.h> doesn't define. */
#define int32_t int

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#define uint64_t unsigned __int64

/* Define to the widest unsigned integer type if <stdint.h> and <inttypes.h>
   do not define. */
#define uintmax_t uint64_t

/* Define to the type of an integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#define int64_t __int64

#endif

namespace HumbugLIB_NAMESPACE {
	template<class T>
	inline const typename T::value_type *getDataPointer(const T &input )
	{
		return &input[0];
	};

	template<class T>
	inline typename T::value_type *getDataPointer(T &input )
	{
		return &input[0];
	};
}
#endif



namespace HumbugLIB_NAMESPACE {


} // namespace HumbugLIB_NAMESPACE
#endif
"
      associated_classes
	class_ref 332034 // cpp0xfix
      end
    end
  end

  package_ref 134658 // main

  package_ref 141186 // build

  package_ref 160898 // shared

  package_ref 167426 // other

  package_ref 173954 // toplevel
end
