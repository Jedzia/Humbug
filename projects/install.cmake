include(InstallRequiredSystemLibraries)

# See http://www.cmake.org/Wiki/CMake:Component_Install_With_CPack
# Components
set(CPACK_COMPONENTS_ALL Application Boost Libraries Resources)
set(CPACK_COMPONENT_APPLICATION_REQUIRED TRUE)
set(CPACK_COMPONENT_BOOST_REQUIRED TRUE)
set(CPACK_COMPONENT_LIBRARIES_REQUIRED TRUE)
set(CPACK_COMPONENT_RESOURCES_REQUIRED TRUE)
set(CPACK_COMPONENT_APPLICATION_DEPENDS Boost Libraries Resources)
# Component naming
set(CPACK_COMPONENT_APPLICATION_DISPLAY_NAME "${CMAKE_PROJECT_NAME} Application")
set(CPACK_COMPONENT_BOOST_DISPLAY_NAME "Boost Libraries")
set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "${CMAKE_PROJECT_NAME} Libraries")
#set(CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C++ Headers")
set(CPACK_COMPONENT_RESOURCES_DISPLAY_NAME "App Resources")
# Component description
set(CPACK_COMPONENT_APPLICATION_DESCRIPTION 
   "An extremely useful application that makes use of MyLib")
set(CPACK_COMPONENT_LIBRARIES_DESCRIPTION
   "Static libraries used to build programs with MyLib")
# Component Grouping
set(CPACK_COMPONENT_APPLICATION_GROUP "${CMAKE_PROJECT_NAME}")
set(CPACK_COMPONENT_BOOST_GROUP "${CMAKE_PROJECT_NAME}")
set(CPACK_COMPONENT_LIBRARIES_GROUP "${CMAKE_PROJECT_NAME}")
set(CPACK_COMPONENT_RESOURCES_GROUP "${CMAKE_PROJECT_NAME}")
# Installation Types
set(CPACK_ALL_INSTALL_TYPES Full Developer)
set(CPACK_COMPONENT_APPLICATIONS_INSTALL_TYPES Full)
set(CPACK_COMPONENT_BOOST_INSTALL_TYPES Full)
set(CPACK_COMPONENT_LIBRARIES_INSTALL_TYPES Developer Full)
set(CPACK_COMPONENT_RESOURCES_INSTALL_TYPES Developer Full)
 
# Settings
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "This is ${CMAKE_PROJECT_NAME}, the App!")
set(CPACK_PACKAGE_VENDOR "Me, myself, and I")
set(CPACK_PACKAGE_DESCRIPTION_FILE "${P_ROOT_PATH}/ReadMe")
set(CPACK_RESOURCE_FILE_WELCOME "${P_ROOT_PATH}/Installer/Welcome.txt")
set(CPACK_RESOURCE_FILE_README "${P_ROOT_PATH}/ReadMe")
set(CPACK_RESOURCE_FILE_LICENSE "${P_ROOT_PATH}/Copyright")
set(CPACK_PACKAGE_VERSION_MAJOR "1")
set(CPACK_PACKAGE_VERSION_MINOR "3")
set(CPACK_PACKAGE_VERSION_PATCH "2")
#set(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CMAKE_PROJECT_NAME}")
if(WIN32 AND NOT UNIX)
  # There is a bug in NSI that does not handle full unix paths properly. Make
  # sure there is at least one set of four (4) backlasshes.
#  set(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
#  set(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\MyExecutable.exe")
  set(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} My Famous Project")
  set(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.my-project-home-page.org")
  set(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.my-personal-home-page.com")
  set(CPACK_NSIS_CONTACT "me@my-personal-home-page.com")
#  set(CPACK_NSIS_MODIFY_PATH ON)
else(WIN32 AND NOT UNIX)
  set(CPACK_STRIP_FILES "bin/MyExecutable")
  set(CPACK_SOURCE_STRIP_FILES "")
endif(WIN32 AND NOT UNIX)
set(CPACK_PACKAGE_EXECUTABLES "${CMAKE_PROJECT_NAME}" "${CMAKE_PROJECT_NAME} App")

include(CPack)
